# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to Netlify on commits to staging

on:
  push:
    branches: [ci-cd]
  pull_request:
    branches: [staging]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      # Checkout repo
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H.%M.%S')"

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run the tests and generate coverage report
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Build
        run: npm run build

      # Deploy the site with netlify-cli
      # - name: Deploy Site
      #   env:
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #   if: contains(github.ref, "staging")
      #   run: netlify deploy --dir=public --prod

      - name: actions successful
        id: successfulMsg
        uses: slackapi/slack-github-action@v1.18.0
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          channel-id: ${{ secrets.CHANNEL_ID }}
          attachments: |
            [
              {
                  "author_name": "${{ github.event.pull_request.title || github.event.head_commit.message }}",
                  "author_link": "${{ github.event.pull_request.html_url || github.event.head_commit.url }} ",
                  "title": "Author: ${{ github.event.pusher.name }} ${{ github.event.pusher.email }}",
                  "color": "#7CD197",
                  "fields": [
                      {
                          "short": false,
                          "title": "GitHub Action build result",
                          "value": "${{ job.status }}"
                      },
                      {
                          "short": true,
                          "title": "branch",
                          "value": "${{ steps.extract_branch.outputs.branch }}"
                      },
                      {
                          "short": true,
                          "title": "time",
                          "value": "${{ steps.date.outputs.date }}"
                      }
                  ]
              }
            ]
        if: success()

      - name: action failed
        id: failureSlackNotification
        uses: slackapi/slack-github-action@v1.18.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          channel-id: ${{ secrets.CHANNEL_ID }}
          payload: |
            {
                "attachments": [
                  {
                        "author_name": "${{ github.event.pull_request.title || github.event.head_commit.message }}",
                        "author_link": "${{ github.event.pull_request.html_url || github.event.head_commit.url }} ",
                        "title": "Author: ${{ github.event.pusher.name }} ${{ github.event.pusher.email }}",
                        "color": "#d91e1e",
                        "fields": [
                            {
                                "short": false,
                                "title": "GitHub Action build result",
                                "value": "${{ job.status }}"
                            },
                            {
                                "short": true,
                                "title": "branch",
                                "value": "${{ steps.extract_branch.outputs.branch }}"
                            },
                            {
                                "short": true,
                                "title": "time",
                                "value": "${{ steps.date.outputs.date }}"
                            }
                        ]
                    }
                ]
            }
        if: failure()
