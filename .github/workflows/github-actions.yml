# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: xxscan - Github Actions

on:
  push:
    branches: [ci-cd]
  pull_request:
    branches: [staging]

jobs:
  build:
    name: Building Node Application
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      # Checkout repo
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H.%M.%S')"

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Install dependencies
      #   run: npm install

      # - name: Run the tests and generate coverage report
      #   run: npm test -- --coverage

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1

      # - name: Build
      #   run: npm run build

      # Deploy the site with netlify-cli
      # - name: Deploy Site
      #   env:
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #   if: contains(github.ref, "staging")
      #   run: netlify deploy --dir=public --prod

  notify:
    name: Repo Updated - Push Action
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: actions successful
        id: successfulMsg
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: xxscan-app
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON_EMOJI: ':rocket:'
          SLACK_MESSAGE: 'Commit Message:\n${{ github.event.pull_request.title || github.event.head_commit.message }}'
          SLACK_TITLE: 'Branch: ${{ github.event.branch }}'
          SLACK_USERNAME: '${{ github.event.pusher.name }}'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}