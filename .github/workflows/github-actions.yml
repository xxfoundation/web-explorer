# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: xxscan - Github Actions

on:
  push:
    branches: [master, staging, release, dev]
  pull_request:

jobs:
  build:
    name: Build Node Application
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]

    steps:
      # Checkout repo
      - uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H.%M.%S')"

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      # - name: Run the tests and generate coverage report
      #   run: npm test -- --coverage

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1

      - name: Build
        run: yarn run build

  .deploy-staging:
    name: Deploy Application to Netlify Staging
    needs: [build]
    runs-on: ubuntu-latest
    env:
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_STAGING }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    if: contains('refs/heads/staging', github.ref)
    steps:
      - name: Deploy to Staging
        run: netlify deploy --prod

  deploy-prod:
    name: Deploy Application to Netlify Production
    needs: [build]
    runs-on: ubuntu-latest
    env:
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_PROD }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    if: contains('refs/heads/release', github.ref)
    if: ${{ false }}  # disable for now
    steps:
      - name: Deploy to Prod
        run: netlify deploy --prod

  notify:
    name: Git Notifications
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: notify slack channel
        id: successfulMsg
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: xxscan-app
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON_EMOJI: ':rocket:'
          SLACK_MESSAGE: '${{ github.event.pull_request.title || github.event.head_commit.message }}'
          SLACK_TITLE: 'Commit Message'
          SLACK_USERNAME: '${{ github.event.pusher.name }}'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
